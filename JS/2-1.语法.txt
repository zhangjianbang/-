1. 区分大小写
	JS的一切变量，函数名，操作符都区分大小写，test!=Test
2. 标识符
	标识符是指 变量名，函数名，属性名，函数参数。
	标识符第一个字符必须是 字母、下划线或$，其他字符是字母，下划线，$，数字。
	标识符首字母小写，往后每个单词的首字母大写。比如 myName;
3.严格模式"user strict"
	严格模式是一种更为严谨的文档解析标准，在严格模式下，一些不确定的行为将会处理，不安全的行为将会抛出异常。
	在全局使用严格模式：<script>"use strict"</script>
	在函数作用域使用严格模式：function test(){"use strict"}
	1.消除JS语法中一些不合理，不严谨之处，减少一些怪异行为。
	2.消除代码运行的一些不安全之处，保证代码的安全性。
	3.提高编译器效率，增加运行速度。
	4.为未来JS版本做好基础。
4.变量
	JS中变量是动态的，不需要给变量声明具体数据类型，变量会根据赋值的来确定自身的数据类型。
	var str = "asd"//String类型
	var str;//undefined，只声明不赋值会显示未赋值。
	
	三种变量的声明形式。
	1. var str；//会受全局作用域和函数作用域影响，如果在函数作用域中声明，函数执行完会此变量立即被销毁。
	2. str；//不受作用域影响，只要以这种形式声明变量就是全局变量。
	3. let str；//ES6中新增声明方式，受全局作用域，函数作用域，和块级作用域影响。
5.数据类型
	基本数据类型(5种)：Undefined,Null,String,Number,Boolean
	复杂数据类型：Object;由无序的键值对组成。
	
	typeof运算法（用来检测是哪种数据类型）
	检测的结果有:
	undefined(未定义)，string（字符类型），number（数值类型），boolean（布尔类型）
	object（对象或null），function（函数）
	！typeof是运算符，不是函数。所以()可不用。typeof 2 == typeof (2)
	！null 被默认为一个空对象的引用，所以返回object。
	！函数不是数据类型，但有特定的属性，可以用typeof来区分函数和对象。



	